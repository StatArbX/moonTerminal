{"ast":null,"code":"var _jsxFileName = \"/Users/siddhanthmate/Desktop/AllFiles/CODE/StatArbXchange/terminal/src/pages/quotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotQuotes = () => {\n  _s();\n  const [candleData, setCandleData] = useState([]);\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:4000/spotDataStream');\n    eventSource.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const T = parseInt(data.T);\n      const spot = parseFloat(data.p);\n      const q = parseFloat(data.q);\n      const x = getIntervalStart(T);\n      setCandleData(prev => {\n        if (prev.length === 0 || x > prev[prev.length - 1].x) {\n          const newCandle = {\n            x,\n            y: [spot, spot, spot, spot]\n          };\n          const newData = [...prev, newCandle];\n          if (newData.length > 50) {\n            newData.shift();\n          }\n          return newData;\n        } else if (x === prev[prev.length - 1]) {\n          const lastCandle = {\n            ...prev[prev.length - 1]\n          };\n          const [open, high, low, close] = lastCandle.y;\n          const newHigh = Math.max(high, spot);\n          const newLow = Math.min(low, spot);\n          lastCandle.y = [open, newHigh, newLow, spot];\n          return [...prev.slice(0, -1), lastCandle];\n        } else {\n          return prev;\n        }\n      });\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n\n  // Function to calculate the UTC timestamp for the start of the IST minute\n  const getIntervalStart = T => {\n    const T_sec = Math.floor(T / 1000); // Convert milliseconds to seconds\n    const IST_sec = T_sec + 19800; // Add 5.5 hours (19800 seconds)\n    const minute_ist = Math.floor(IST_sec / 60); // Floor to the minute\n    const interval_start_ist_sec = minute_ist * 60; // Start of the minute in IST\n    const interval_start_utc_sec = interval_start_ist_sec - 19800; // Convert back to UTC\n    return interval_start_utc_sec * 1000; // Convert to milliseconds\n  };\n  const options = {\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        formatter: function (val) {\n          return new Date(val).toLocaleString('en-IN', {\n            timeZone: 'Asia/Kolkata',\n            hour: '2-digit',\n            minute: '2-digit'\n          });\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  };\n  const series = [{\n    data: candleData // Array of { x: timestamp, y: [open, high, low, close] }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Candlestick Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"candlestick\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotQuotes, \"MA+GXrdVJn+zAr2qxP/I/kOmSgw=\");\n_c = SpotQuotes;\nexport default SpotQuotes;\nvar _c;\n$RefreshReg$(_c, \"SpotQuotes\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","SpotQuotes","_s","candleData","setCandleData","eventSource","EventSource","onmessage","event","data","JSON","parse","T","parseInt","spot","parseFloat","p","q","x","getIntervalStart","prev","length","newCandle","y","newData","shift","lastCandle","open","high","low","close","newHigh","Math","max","newLow","min","slice","T_sec","floor","IST_sec","minute_ist","interval_start_ist_sec","interval_start_utc_sec","options","chart","type","height","xaxis","labels","formatter","val","Date","toLocaleString","timeZone","hour","minute","yaxis","tooltip","enabled","series","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddhanthmate/Desktop/AllFiles/CODE/StatArbXchange/terminal/src/pages/quotes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from 'react-apexcharts';\n\n\nconst SpotQuotes = () => {\n    const [candleData, setCandleData] = useState([]);\n\n    useEffect(() => {\n        const eventSource = new EventSource('http://localhost:4000/spotDataStream');\n        \n        eventSource.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            const T = parseInt(data.T);\n            const spot = parseFloat(data.p);\n            const q = parseFloat(data.q)\n            \n            const x = getIntervalStart(T);\n\n            setCandleData((prev) => {\n                if ((prev.length === 0) || (x > prev[prev.length - 1].x)) {\n                    const newCandle = { x, y: [spot,spot,spot,spot]};\n                    const newData = [...prev, newCandle];\n\n                    if (newData.length > 50){\n                        newData.shift();\n                    }\n                    return newData;\n                } else if (x === prev[prev.length-1]) {\n                    const lastCandle = {...prev[prev.length-1]};\n                    const [open, high, low, close] = lastCandle.y;\n                    const newHigh = Math.max(high, spot);\n                    const newLow = Math.min(low, spot);\n                    lastCandle.y = [open, newHigh, newLow, spot];\n                    return [...prev.slice(0,-1), lastCandle];\n                } else {\n                    return prev;\n                }                \n            });\n        };\n        \n        return () => {\n            eventSource.close();\n        };\n    }, []);\n\n\n\n    // Function to calculate the UTC timestamp for the start of the IST minute\n    const getIntervalStart = (T) => {\n        const T_sec = Math.floor(T / 1000); // Convert milliseconds to seconds\n        const IST_sec = T_sec + 19800; // Add 5.5 hours (19800 seconds)\n        const minute_ist = Math.floor(IST_sec / 60); // Floor to the minute\n        const interval_start_ist_sec = minute_ist * 60; // Start of the minute in IST\n        const interval_start_utc_sec = interval_start_ist_sec - 19800; // Convert back to UTC\n        return interval_start_utc_sec * 1000; // Convert to milliseconds\n    };\n\n\n    const options = {\n            chart: {\n                type: 'candlestick',\n                height: 350,\n            },\n            xaxis: {\n                type: 'datetime',\n                labels: {\n                formatter: function (val) {\n                    return new Date(val).toLocaleString('en-IN', {\n                        timeZone: 'Asia/Kolkata',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                    });\n                },\n                },\n            },\n            yaxis: {\n                tooltip: {\n                enabled: true,\n            },\n        },      \n    };\n    const series = [\n        {\n          data: candleData, // Array of { x: timestamp, y: [open, high, low, close] }\n        },\n      ];\n    \n      return (\n        <div>\n          <h1>Real-Time Candlestick Chart</h1>\n          <Chart\n            options={options}\n            series={series}\n            type=\"candlestick\"\n            height={350}\n          />\n        </div>\n      );\n};\n\n\nexport default SpotQuotes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}