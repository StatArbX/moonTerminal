{"ast":null,"code":"// // src/ChartComponent.js\n// import React, { useEffect, useState } from 'react';\n// import io from 'socket.io-client';\n// import { Line } from 'react-chartjs-2';\n// import 'chart.js/auto';\n\n// // Connect to our backend Socket.IO server\n// const socket = io('http://localhost:4000');\n\n// const ChartComponent = () => {\n//   const [chartData, setChartData] = useState({\n//     labels: [],\n//     datasets: [{\n//       label: 'Price',\n//       data: [],\n//       fill: false,\n//       backgroundColor: 'rgb(75, 192, 192)',\n//       borderColor: 'rgba(75, 192, 192, 0.2)',\n//     }]\n//   });\n\n//   useEffect(() => {\n//     socket.on('redisData', (data) => {\n//       // Extract the price (p) and time (t)\n//       // Assuming `t` is a Unix timestamp in seconds if it is 10 digits long\n//       let timestamp;\n//       if (String(data.t).length === 13) {\n//         timestamp = new Date(data.t);\n//       } else {\n//         timestamp = new Date(data.t * 1000);\n//       }\n\n//       const istTime = timestamp.toLocaleString(\"en-IN\", { timeZone: \"Asia/Kolkata\" });\n\n//       setChartData(prevState => ({\n//         labels: [...prevState.labels, istTime],\n//         datasets: [{\n//           ...prevState.datasets[0],\n//           data: [...prevState.datasets[0].data, parseFloat(data.p)]\n//         }]\n//       }));\n//     });\n\n//     return () => {\n//       socket.off('redisData');\n//     }\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Live Price Chart</h2>\n//       <Line data={chartData} />\n//     </div>\n//   );\n// };\n\n// export default ChartComponent;","map":{"version":3,"names":[],"sources":["/Users/siddhanthmate/Desktop/AllFiles/CODE/StatArbXchange/terminal/src/components/ChartComponents.js"],"sourcesContent":["// // src/ChartComponent.js\n// import React, { useEffect, useState } from 'react';\n// import io from 'socket.io-client';\n// import { Line } from 'react-chartjs-2';\n// import 'chart.js/auto';\n\n// // Connect to our backend Socket.IO server\n// const socket = io('http://localhost:4000');\n\n// const ChartComponent = () => {\n//   const [chartData, setChartData] = useState({\n//     labels: [],\n//     datasets: [{\n//       label: 'Price',\n//       data: [],\n//       fill: false,\n//       backgroundColor: 'rgb(75, 192, 192)',\n//       borderColor: 'rgba(75, 192, 192, 0.2)',\n//     }]\n//   });\n\n//   useEffect(() => {\n//     socket.on('redisData', (data) => {\n//       // Extract the price (p) and time (t)\n//       // Assuming `t` is a Unix timestamp in seconds if it is 10 digits long\n//       let timestamp;\n//       if (String(data.t).length === 13) {\n//         timestamp = new Date(data.t);\n//       } else {\n//         timestamp = new Date(data.t * 1000);\n//       }\n      \n//       const istTime = timestamp.toLocaleString(\"en-IN\", { timeZone: \"Asia/Kolkata\" });\n      \n//       setChartData(prevState => ({\n//         labels: [...prevState.labels, istTime],\n//         datasets: [{\n//           ...prevState.datasets[0],\n//           data: [...prevState.datasets[0].data, parseFloat(data.p)]\n//         }]\n//       }));\n//     });\n\n//     return () => {\n//       socket.off('redisData');\n//     }\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Live Price Chart</h2>\n//       <Line data={chartData} />\n//     </div>\n//   );\n// };\n\n// export default ChartComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}